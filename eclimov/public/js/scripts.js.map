{"version":3,"sources":["scripts.js"],"names":["jQuery","noConflict","$","submit","e","preventDefault","btn","find","prop","textarea","$this","ajax","url","attr","method","data","serialize","done","toastr","success","val","fail","xhr","msg","responseJSON","error","always","getMessages","template","messageContainer","console","log","each","n","id","length","elm","clone","show","html","message","append","setInterval"],"mappings":";;AAAA;AACAA,OAAOC,UAAP;AACA,CAAC,UAASC,CAAT,EAAY;AACTA,MAAE,YAAW;AACTA,UAAE,mBAAF,EAAuBC,MAAvB,CAA8B,UAASC,CAAT,EAAY;AACtCA,cAAEC,cAAF;;AAEA,gBAAMC,MAAMJ,EAAE,IAAF,EAAQK,IAAR,CAAa,qBAAb,CAAZ;AACAD,gBAAIE,IAAJ,CAAS,UAAT,EAAqB,IAArB;;AAEA,gBAAMC,WAAWP,EAAE,IAAF,EAAQK,IAAR,CAAa,UAAb,CAAjB;;AAEA,gBAAMG,QAAQR,EAAE,IAAF,CAAd;AACAA,cAAES,IAAF,CAAO;AACHC,qBAAKF,MAAMG,IAAN,CAAW,QAAX,CADF;AAEHC,wBAAQJ,MAAMG,IAAN,CAAW,QAAX,CAFL;AAGHE,sBAAML,MAAMM,SAAN;AAHH,aAAP,EAIGC,IAJH,CAIQ,UAASF,IAAT,EAAe;AACnBG,uBAAOC,OAAP,CAAeJ,KAAKI,OAApB;AACAV,yBAASW,GAAT,CAAa,EAAb;AACH,aAPD,EAOGC,IAPH,CAOQ,UAASC,GAAT,EAAc;AAClB,oBAAIC,MAAMD,IAAIE,YAAJ,CAAiBC,KAAjB,GACNH,IAAIE,YAAJ,CAAiBC,KADX,GACmB,sBAD7B;AAEAP,uBAAOO,KAAP,CAAaF,GAAb;AACH,aAXD,EAWGG,MAXH,CAWU,YAAW;AACjBpB,oBAAIE,IAAJ,CAAS,UAAT,EAAqB,KAArB;AACH,aAbD;AAcH,SAvBD;AAwBH,KAzBD;;AA2BA,QAAImB,cAAc,SAAdA,WAAc,GAAW;AACzB,YAAIC,WAAW1B,EAAE,sBAAF,CAAf;AACA,YAAI2B,mBAAmB3B,EAAE,gCAAF,CAAvB;;AAEAA,UAAES,IAAF,CAAO;AACHC,iBAAK,WADF;AAEHE,oBAAQ;AAFL,SAAP,EAGGG,IAHH,CAGQ,UAASF,IAAT,EAAe;AACnBe,oBAAQC,GAAR,CAAYhB,IAAZ;AACAb,cAAE8B,IAAF,CAAOjB,IAAP,EAAa,UAASkB,CAAT,EAAYV,GAAZ,EAAiB;AAC1B,oBAAIrB,EAAE,iBAAiBqB,IAAIW,EAAvB,EAA2BC,MAA3B,IAAqC,CAAzC,EAA4C;AACxC,wBAAIC,MAAMR,SAASS,KAAT,GAAiBC,IAAjB,EAAV;AACAF,wBAAIvB,IAAJ,CAAS,IAAT,EAAe,gBAAgBU,IAAIW,EAAnC;AACAE,wBAAI7B,IAAJ,CAAS,oBAAT,EAA+BgC,IAA/B,CAAoChB,IAAIiB,OAAxC;AACAX,qCAAiBY,MAAjB,CAAwBL,GAAxB;AACH;AACJ,aAPD;AAQH,SAbD,EAaGf,IAbH,CAaQ,UAASC,GAAT,EAAc;AAClB,gBAAIC,MAAMD,IAAIE,YAAJ,CAAiBC,KAAjB,GACNH,IAAIE,YAAJ,CAAiBC,KADX,GACmB,0BAD7B;AAEAP,mBAAOO,KAAP,CAAaF,GAAb;AACH,SAjBD;AAkBH,KAtBD;;AAwBAmB,gBAAYf,WAAZ,EAAyB,IAAzB;AACH,CArDD,EAqDG3B,MArDH","file":"scripts.js","sourcesContent":["/* eslint no-invalid-this: off, require-jsdoc: off */\njQuery.noConflict();\n(function($) {\n    $(function() {\n        $('#ct-message__form').submit(function(e) {\n            e.preventDefault();\n\n            const btn = $(this).find('button[type=submit]');\n            btn.prop('disabled', true);\n\n            const textarea = $(this).find('textarea');\n\n            const $this = $(this);\n            $.ajax({\n                url: $this.attr('action'),\n                method: $this.attr('method'),\n                data: $this.serialize()\n            }).done(function(data) {\n                toastr.success(data.success);\n                textarea.val('');\n            }).fail(function(xhr) {\n                let msg = xhr.responseJSON.error ?\n                    xhr.responseJSON.error : 'Message was not sent';\n                toastr.error(msg);\n            }).always(function() {\n                btn.prop('disabled', false);\n            });\n        });\n    });\n\n    let getMessages = function() {\n        let template = $('#ct-message-template');\n        let messageContainer = $('#ct-dialog__messages-container');\n\n        $.ajax({\n            url: '/messages',\n            method: 'GET'\n        }).done(function(data) {\n            console.log(data);\n            $.each(data, function(n, msg) {\n                if ($('#ct-message-' + msg.id).length == 0) {\n                    let elm = template.clone().show();\n                    elm.attr('id', 'ct-message-' + msg.id);\n                    elm.find('.ct-media__address').html(msg.message);\n                    messageContainer.append(elm);\n                }\n            });\n        }).fail(function(xhr) {\n            let msg = xhr.responseJSON.error ?\n                xhr.responseJSON.error : 'Unable to fetch messages';\n            toastr.error(msg);\n        });\n    };\n\n    setInterval(getMessages, 3000);\n})(jQuery);\n"]}